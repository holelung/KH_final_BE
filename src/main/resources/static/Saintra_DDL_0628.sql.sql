-- 로그 테이블
CREATE TABLE TB_LOG(
	ID NUMBER GENERATED AS IDENTITY PRIMARY KEY,
	USER_ID NUMBER NOT NULL, -- 사용자 테이블 PK
	ACTION_AREA VARCHAR2(32) NOT NULL,
	ACTION_TYPE VARCHAR2(32) NOT NULL,
	ACTION_RESULT VARCHAR2(8) NOT NULL CHECK (ACTION_RESULT IN ('Success', 'Failure')),
	ACTION_TIME DATE DEFAULT SYSDATE NOT NULL,
	CLIENT_IP VARCHAR2(128) NOT NULL,
	REFERER VARCHAR2(256) NULL,
	CONSTRAINT FK_LOG_USER FOREIGN KEY (USER_ID) REFERENCES TB_USER(ID) ON DELETE CASCADE
);

ALTER TABLE TB_LOG MODIFY REFERER NULL;
SELECT * FROM TB_LOG;

-- 사용자 테이블
CREATE TABLE TB_USER(
	ID NUMBER GENERATED AS IDENTITY PRIMARY KEY,
	USERNAME VARCHAR2(32) NOT NULL UNIQUE,
	PASSWORD VARCHAR2(128) NOT NULL,
	REALNAME NVARCHAR2(6) NOT NULL,
	EMAIL VARCHAR2(64) NOT NULL UNIQUE,
	ADDRESS_1 NVARCHAR2(64) NOT NULL,
	ADDRESS_2 NVARCHAR2(256) NOT NULL,
	PHONE VARCHAR2(128) NOT NULL UNIQUE,
	SSN VARCHAR2(128) NOT NULL UNIQUE,
	JOB_ID NUMBER, -- 직급 테이블 PK
	DEPT_ID NUMBER, -- 부서 테이블 PK
	TEAM_ID NUMBER, -- 팀 테이블 PK
	ROLE VARCHAR2(16) DEFAULT 'ROLE_USER' NOT NULL CHECK (ROLE IN ('ROLE_USER', 'ROLE_ADMIN')),
	ENROLL_DATE DATE DEFAULT NULL,
	IS_ACTIVE CHAR(1) DEFAULT 'N' NOT NULL CHECK (IS_ACTIVE IN ('Y', 'N')),
	CONSTRAINT FK_USER_JOB FOREIGN KEY (JOB_ID) REFERENCES TB_JOB(ID) ON DELETE CASCADE,
	CONSTRAINT FK_USER_DEPT FOREIGN KEY (DEPT_ID) REFERENCES TB_DEPARTMENT(ID) ON DELETE CASCADE,
	CONSTRAINT FK_USER_TEAM FOREIGN KEY (TEAM_ID) REFERENCES TB_TEAM(ID) ON DELETE CASCADE
);

ALTER TABLE TB_USER MODIFY PHONE VARCHAR2(128);
ALTER TABLE TB_USER MODIFY SSN VARCHAR2(128);
SELECT * FROM TB_USER;

-- 직급 테이블
CREATE TABLE TB_JOB(
	ID NUMBER PRIMARY KEY, -- 사전에 지정된 값 삽입하여 사용
	JOB_NAME NVARCHAR2(8) NOT NULL UNIQUE
);

-- 부서 테이블
CREATE TABLE TB_DEPARTMENT(
	ID NUMBER GENERATED AS IDENTITY PRIMARY KEY,
	DEPT_NAME NVARCHAR2(16) NOT NULL UNIQUE,
	PERSONNEL CHAR(1) DEFAULT 'N' NOT NULL CHECK (PERSONNEL IN ('Y', 'N')),
	INSPECT CHAR(1) DEFAULT 'N' NOT NULL CHECK (INSPECT IN ('Y', 'N')),
	IS_ACTIVE CHAR(1) DEFAULT 'N' NOT NULL CHECK (IS_ACTIVE IN ('Y', 'N'))
);

-- 팀 테이블
CREATE TABLE TB_TEAM(
	ID NUMBER GENERATED AS IDENTITY PRIMARY KEY,
	TEAM_NAME NVARCHAR2(16) NOT NULL UNIQUE,
	DEPT_ID NUMBER NOT NULL, -- 부서 테이블 PK
	IS_ACTIVE CHAR(1) DEFAULT 'N'  NOT NULL CHECK (IS_ACTIVE IN ('Y', 'N')),
	CONSTRAINT FK_TEAM_DEPT FOREIGN KEY (DEPT_ID) REFERENCES TB_DEPARTMENT(ID) ON DELETE CASCADE
);

-- 토큰 테이블
CREATE TABLE TB_TOKEN(
	ID NUMBER GENERATED AS IDENTITY PRIMARY KEY,
	USER_ID NUMBER NOT NULL, -- 사용자 테이블 PK
	TOKEN VARCHAR2(256) NOT NULL,
	EXPIRATION DATE DEFAULT SYSDATE NOT NULL,
	CONSTRAINT FK_TOKEN_USER FOREIGN KEY (USER_ID) REFERENCES TB_USER(ID) ON DELETE CASCADE
);

-- 출퇴근 기록 테이블
CREATE TABLE TB_ATTENDANCE(
	ID NUMBER GENERATED AS IDENTITY PRIMARY KEY,
	USER_ID NUMBER NOT NULL, -- 사용자 테이블 PK
	TYPE VARCHAR2(16) NOT NULL CHECK (TYPE IN ('Attendance', 'Leave')),
	TIME DATE DEFAULT SYSDATE NOT NULL,
	CONSTRAINT FK_ATTENDANCE_USER FOREIGN KEY (USER_ID) REFERENCES TB_USER(ID) ON DELETE CASCADE
);

-- 비밀번호 발급 키 테이블
CREATE TABLE TB_ACCESS_KEY(
	ID NUMBER GENERATED AS IDENTITY PRIMARY KEY,
	USER_ID NUMBER NOT NULL, -- 사용자 테이블 PK
	ACCESS_KEY VARCHAR2(256) NOT NULL,
	ISSUE_DATE DATE DEFAULT SYSDATE NOT NULL,
	CONSTRAINT FK_ACCESS_KEY_USER FOREIGN KEY (USER_ID) REFERENCES TB_USER(ID) ON DELETE CASCADE
);

-- 가입 신청 테이블
CREATE TABLE TB_JOIN(
	USER_ID NUMBER PRIMARY KEY, -- 사용자 테이블 PK
	ISSUE_DATE DATE DEFAULT SYSDATE NOT NULL,
	CONSTRAINT FK_JOIN_USER FOREIGN KEY (USER_ID) REFERENCES TB_USER(ID) ON DELETE CASCADE
);

-- 프로필 사진 경로 테이블
CREATE TABLE TB_PROFILE(
	USER_ID NUMBER PRIMARY KEY, -- 사용자 테이블 PK
	URL VARCHAR2(256) NOT NULL, -- 기본 이미지 경로가 확정되면 DEFAULT '기본 이미지 URL'을 추가하여 다시 생성할 것
	CONSTRAINT FK_PROFILE_USER FOREIGN KEY (USER_ID) REFERENCES TB_USER(ID) ON DELETE CASCADE
);

-- 이메일 인증 코드 테이블
CREATE TABLE TB_VERIFY_CODE(
	EMAIL VARCHAR2(64) NOT NULL,
	VERIFY_CODE VARCHAR2(256) NOT NULL,
	ISSUE_DATE DATE DEFAULT SYSDATE NOT NULL,
	CONSTRAINT PK_VERIFY_CODE PRIMARY KEY(EMAIL, VERIFY_CODE)
);

-- 공지사항 게시판 게시물 테이블
CREATE TABLE TB_BOARD_BULLETIN(
	ID NUMBER GENERATED AS IDENTITY PRIMARY KEY,
	USER_ID NUMBER NOT NULL, -- 사용자 테이블 PK
	TITLE VARCHAR2(64) NOT NULL,
	CONTENT VARCHAR2(4000) NOT NULL,
	CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
	IS_ACTIVE CHAR(1) DEFAULT 'Y' NOT NULL CHECK (IS_ACTIVE IN('Y', 'N')),
	CONSTRAINT FK_BOARD_BULLETIN_USER FOREIGN KEY (USER_ID) REFERENCES TB_USER(ID) ON DELETE CASCADE
);

-- 자유 게시판 게시물 테이블
CREATE TABLE TB_BOARD_FREE(
	ID NUMBER GENERATED AS IDENTITY PRIMARY KEY,
	USER_ID NUMBER NOT NULL, -- 사용자 테이블 PK
	TITLE VARCHAR2(64) NOT NULL,
	CONTENT VARCHAR2(4000) NOT NULL,
	CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
	IS_ACTIVE CHAR(1) DEFAULT 'Y' NOT NULL CHECK (IS_ACTIVE IN('Y', 'N')),
	CONSTRAINT FK_BOARD_FREE_USER FOREIGN KEY (USER_ID) REFERENCES TB_USER(ID) ON DELETE CASCADE
);

-- 익명 게시판 게시물 테이블
CREATE TABLE TB_BOARD_ANONYMOUS(
	ID NUMBER GENERATED AS IDENTITY PRIMARY KEY,
	USER_ID NUMBER NOT NULL, -- 사용자 테이블 PK
	TITLE VARCHAR2(64) NOT NULL,
	CONTENT VARCHAR2(4000) NOT NULL,
	CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
	IS_ACTIVE CHAR(1) DEFAULT 'Y' NOT NULL CHECK (IS_ACTIVE IN('Y', 'N')),
	CONSTRAINT FK_BOARD_ANONYMOUS_USER FOREIGN KEY (USER_ID) REFERENCES TB_USER(ID) ON DELETE CASCADE
);

-- 부서 게시판 게시물 테이블
CREATE TABLE TB_BOARD_DEPARTMENT(
	ID NUMBER GENERATED AS IDENTITY PRIMARY KEY,
	DEPT_ID NUMBER NOT NULL, -- 부서 테이블 PK
	USER_ID NUMBER NOT NULL, -- 사용자 테이블 PK
	TITLE VARCHAR2(64) NOT NULL,
	CONTENT VARCHAR2(4000) NOT NULL,
	CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
	IS_ACTIVE CHAR(1) DEFAULT 'Y' NOT NULL CHECK (IS_ACTIVE IN('Y', 'N')),
	CONSTRAINT FK_BOARD_DEPT_USER FOREIGN KEY (USER_ID) REFERENCES TB_USER(ID) ON DELETE CASCADE
);

-- 공지사항 게시판 첨부파일 테이블
CREATE TABLE TB_FILE_BULLETIN(
	ID NUMBER PRIMARY KEY,
	BOARD_ID NUMBER NOT NULL, -- 게시물 테이블 PK
	URL VARCHAR2(256) NOT NULL UNIQUE,
	ORIGIN VARCHAR2(4000) NOT NULL,
	CONSTRAINT FK_FILE_BULLETIN_BOARD FOREIGN KEY (BOARD_ID) REFERENCES TB_BOARD_BULLETIN(ID) ON DELETE CASCADE
);

-- 자유 게시판 첨부파일 테이블
CREATE TABLE TB_FILE_FREE(
	ID NUMBER PRIMARY KEY,
	BOARD_ID NUMBER NOT NULL, -- 게시물 테이블 PK
	URL VARCHAR2(256) NOT NULL UNIQUE,
	ORIGIN VARCHAR2(4000) NOT NULL,
	CONSTRAINT FK_FILE_FREE_BOARD FOREIGN KEY (BOARD_ID) REFERENCES TB_BOARD_FREE(ID) ON DELETE CASCADE
);

-- 익명 게시판 첨부파일 테이블
CREATE TABLE TB_FILE_ANONYMOUS(
	ID NUMBER PRIMARY KEY,
	BOARD_ID NUMBER NOT NULL, -- 게시물 테이블 PK
	URL VARCHAR2(256) NOT NULL UNIQUE,
	ORIGIN VARCHAR2(4000) NOT NULL,
	CONSTRAINT FK_FILE_ANONYMOUS_BOARD FOREIGN KEY (BOARD_ID) REFERENCES TB_BOARD_ANONYMOUS(ID) ON DELETE CASCADE
);

-- 부서 게시판 첨부파일 테이블
CREATE TABLE TB_FILE_DEPARTMENT(
	ID NUMBER PRIMARY KEY,
	BOARD_ID NUMBER NOT NULL, -- 게시물 테이블 PK
	URL VARCHAR2(256) NOT NULL UNIQUE,
	ORIGIN VARCHAR2(4000) NOT NULL,
	CONSTRAINT FK_FILE_DEPT_BOARD FOREIGN KEY (BOARD_ID) REFERENCES TB_BOARD_DEPARTMENT(ID) ON DELETE CASCADE
);

-- 공지사항 게시판 댓글 테이블
CREATE TABLE TB_COMMENT_BULLETIN(
	ID NUMBER GENERATED AS IDENTITY PRIMARY KEY,
	BOARD_ID NUMBER NOT NULL, -- 게시물 테이블 PK
	USER_ID NUMBER NOT NULL, -- 사용자 테이블 PK
	CONTENT VARCHAR2(4000) NOT NULL,
	CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
	IS_ACTIVE CHAR(1) DEFAULT 'Y' NOT NULL CHECK (IS_ACTIVE IN ('Y', 'N')),
	CONSTRAINT FK_COMMENT_BULLETIN_BOARD FOREIGN KEY (BOARD_ID) REFERENCES TB_BOARD_BULLETIN(ID) ON DELETE CASCADE,
	CONSTRAINT FK_COMMENT_BULLETIN_USER FOREIGN KEY (USER_ID) REFERENCES TB_USER(ID) ON DELETE CASCADE
);

-- 자유 게시판 댓글 테이블
CREATE TABLE TB_COMMENT_FREE(
	ID NUMBER GENERATED AS IDENTITY PRIMARY KEY,
	BOARD_ID NUMBER NOT NULL, -- 게시물 테이블 PK
	USER_ID NUMBER NOT NULL, -- 사용자 테이블 PK
	CONTENT VARCHAR2(4000) NOT NULL,
	CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
	IS_ACTIVE CHAR(1) DEFAULT 'Y' NOT NULL CHECK (IS_ACTIVE IN ('Y', 'N')),
	CONSTRAINT FK_COMMENT_FREE_BOARD FOREIGN KEY (BOARD_ID) REFERENCES TB_BOARD_FREE(ID) ON DELETE CASCADE,
	CONSTRAINT FK_COMMENT_FREE_USER FOREIGN KEY (USER_ID) REFERENCES TB_USER(ID) ON DELETE CASCADE
);

-- 익명 게시판 댓글 테이블
CREATE TABLE TB_COMMENT_ANONYMOUS(
	ID NUMBER GENERATED AS IDENTITY PRIMARY KEY,
	BOARD_ID NUMBER NOT NULL, -- 게시물 테이블 PK
	USER_ID NUMBER NOT NULL, -- 사용자 테이블 PK
	CONTENT VARCHAR2(4000) NOT NULL,
	CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
	IS_ACTIVE CHAR(1) DEFAULT 'Y' NOT NULL CHECK (IS_ACTIVE IN ('Y', 'N')),
	CONSTRAINT FK_COMMENT_ANONYMOUS_BOARD FOREIGN KEY (BOARD_ID) REFERENCES TB_BOARD_ANONYMOUS(ID) ON DELETE CASCADE,
	CONSTRAINT FK_COMMENT_ANONYMOUS_USER FOREIGN KEY (USER_ID) REFERENCES TB_USER(ID) ON DELETE CASCADE
);

-- 부서 게시판 댓글 테이블
CREATE TABLE TB_COMMENT_DEPARTMENT(
	ID NUMBER GENERATED AS IDENTITY PRIMARY KEY,
	BOARD_ID NUMBER NOT NULL, -- 게시물 테이블 PK
	USER_ID NUMBER NOT NULL, -- 사용자 테이블 PK
	CONTENT VARCHAR2(4000) NOT NULL,
	CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
	IS_ACTIVE CHAR(1) DEFAULT 'Y' NOT NULL CHECK (IS_ACTIVE IN ('Y', 'N')),
	CONSTRAINT FK_COMMENT_DEPT_BOARD FOREIGN KEY (BOARD_ID) REFERENCES TB_BOARD_DEPARTMENT(ID) ON DELETE CASCADE,
	CONSTRAINT FK_COMMENT_DEPT_USER FOREIGN KEY (USER_ID) REFERENCES TB_USER(ID) ON DELETE CASCADE
);

-- 예약자 테이블
CREATE TABLE TB_RESERVER(
	ID NUMBER GENERATED AS IDENTITY PRIMARY KEY,
	RESERVER_TYPE CHAR(4) NOT NULL CHECK (RESERVER_TYPE IN ('USER', 'TEAM'))
);

-- 개인 예약자 테이블
CREATE TABLE TB_USER_RESERVER(
	RESERVER_ID NUMBER PRIMARY KEY, -- 예약자 테이블 PK
	USER_ID NUMBER NOT NULL, -- 사용자 테이블 PK
	CONSTRAINT FK_USER_RESERVER_RESERVER FOREIGN KEY (RESERVER_ID) REFERENCES TB_RESERVER(ID) ON DELETE CASCADE,
	CONSTRAINT FK_USER_RESERVER_USER FOREIGN KEY (USER_ID) REFERENCES TB_USER(ID) ON DELETE CASCADE
);

-- 팀 예약자 테이블
CREATE TABLE TB_TEAM_RESERVER(
	RESERVER_ID NUMBER PRIMARY KEY, -- 예약자 테이블 PK
	TEAM_ID NUMBER NOT NULL, -- 팀 테이블 PK
	CONSTRAINT FK_TEAM_RESERVER_RESERVER FOREIGN KEY (RESERVER_ID) REFERENCES TB_RESERVER(ID) ON DELETE CASCADE,
	CONSTRAINT FK_TEAM_RESERVER_TEAM FOREIGN KEY (TEAM_ID) REFERENCES TB_TEAM(ID) ON DELETE CASCADE
);

-- 회의실 테이블
CREATE TABLE TB_MEETING_ROOM(
	ID NUMBER GENERATED AS IDENTITY PRIMARY KEY,
	ROOM_NAME NVARCHAR2(32) NOT NULL UNIQUE,
	ROOM_LOCATION NVARCHAR2(128) NOT NULL UNIQUE,
	CAPACITY NUMBER NOT NULL
);

-- 회의실 예약 테이블
CREATE TABLE TB_RESERVATION(
	ID NUMBER GENERATED AS IDENTITY PRIMARY KEY,
	ROOM_ID NUMBER NOT NULL, -- 회의실 테이블 PK
	RESERVER_ID NUMBER NOT NULL, -- 예약자 테이블 PK
	RESERVE_DATE DATE DEFAULT SYSDATE NOT NULL,
	START_TIME DATE NOT NULL,
	END_TIME DATE NOT NULL,
	PURPOSE NVARCHAR2(512) NOT NULL,
	IS_ACTIVE CHAR(1) DEFAULT 'Y' NOT NULL CHECK (IS_ACTIVE IN ('Y', 'N')),
	CONSTRAINT FK_RESEVATION_MEETING_ROOM FOREIGN KEY (ROOM_ID) REFERENCES TB_MEETING_ROOM(ID) ON DELETE CASCADE,
	CONSTRAINT FK_RESEVATION_RESERVER FOREIGN KEY (RESERVER_ID) REFERENCES TB_RESERVER(ID) ON DELETE CASCADE
);

-- 일정 테이블
CREATE TABLE TB_SCHEDULE(
	ID NUMBER GENERATED AS IDENTITY PRIMARY KEY,
	TITLE NVARCHAR2(32) NOT NULL,
	CONTENT NVARCHAR2(256),
	RESERVER_ID NUMBER NOT NULL, -- 예약자 테이블 PK
	START_DATE DATE NOT NULL,
	END_DATE DATE NOT NULL,
	COLOR_CODE CHAR(7) NOT NULL,
	IS_ACTIVE CHAR(1) DEFAULT 'Y' NOT NULL CHECK (IS_ACTIVE IN ('Y', 'N')),
	CONSTRAINT FK_SCHEDULE_RESERVER FOREIGN KEY (RESERVER_ID) REFERENCES TB_RESERVER(ID) ON DELETE CASCADE
);

-- 채팅방 테이블
CREATE TABLE TB_CHAT_ROOM(
	ID NUMBER NOT NULL,
	USER_ID NUMBER NOT NULL, -- 사용자 테이블 PK
	CONSTRAINT PK_CHAT_ROOM PRIMARY KEY(ID, USER_ID),
	CONSTRAINT FK_CHAT_ROOM_USER FOREIGN KEY (USER_ID) REFERENCES TB_USER(ID) ON DELETE CASCADE
);

-- 메시지 테이블
CREATE TABLE TB_MESSAGE(
	ID NUMBER GENERATED AS IDENTITY,
	ROOM_ID NUMBER NOT NULL, -- 채팅방 테이블 PK
	USER_ID NUMBER NOT NULL, -- 사용자 테이블 PK
	CONTENT VARCHAR2(4000) NOT NULL,
	SENT_DATE DATE DEFAULT SYSDATE NOT NULL,
	CONSTRAINT FK_MESSAGE_CHAT_ROOM FOREIGN KEY (ROOM_ID, USER_ID) REFERENCES TB_CHAT_ROOM(ID, USER_ID) ON DELETE CASCADE
);